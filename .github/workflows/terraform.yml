# Documentation for `hashicorp/setup-terraform` is located here: https://github.com/hashicorp/setup-terraform

name: 'Terraform Deploy to GCP'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Deploy to GCP'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.8

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      continue-on-error: false
      env:
        GOOGLE_CREDENTIALS: ${{secrets.GOOGLE_CREDENTIALS}}

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
      continue-on-error: false

    - name: Terraform Validate
      id: validate
      run: terraform validate

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      continue-on-error: false
      env:
        GOOGLE_CREDENTIALS: ${{secrets.GOOGLE_CREDENTIALS}}

    # Terraform validator, validates the tf plan against security policies
    - name: Security Policy Validator
      run: |
        git clone https://github.com/skymars-cloud/policy-library.git
        gsutil cp gs://terraform-validator/releases/v0.9.1/terraform-validator_linux_amd64-0.9.1.tar.gz .
        tar -xzvf terraform-validator_linux_amd64-0.9.1.tar.gz
        chmod 755 terraform-validator
        rm -rf secure.tfplan && terraform plan -out=secure.tfplan
        rm -rf secure.json && terraform show -json secure.tfplan > secure.json
        terraform-validator validate --verbose --project prj-dev-palani-ram secure.json --policy-path=policy-library
      continue-on-error: false
      env:
        GOOGLE_CREDENTIALS: ${{secrets.GOOGLE_CREDENTIALS}}

      # On push to master, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve
      continue-on-error: false
      env:
        GOOGLE_CREDENTIALS: ${{secrets.GOOGLE_CREDENTIALS}}
